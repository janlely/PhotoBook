// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  albums    Album[]
  images    Image[]
  imageLinks ImageLink[]
}

model Album {
  id        Int      @id @default(autoincrement())
  title     String
  parentId  Int?
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pages     Page[]
  children  Album[]  @relation("AlbumToAlbum")
  parent    Album?   @relation("AlbumToAlbum", fields: [parentId], references: [id])
  backgroundColor String?   // 相册背景色
  backgroundImage String?   // 相册背景图片URL
}

model Page {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  albumId   Int
  album     Album    @relation(fields: [albumId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  backgroundColor String?   // 页面背景色
  backgroundImage String?   // 页面背景图片URL
}

model Image {
  id        Int      @id @default(autoincrement())
  filename  String   @unique
  originalName String
  mimeType  String
  size      Int
  sha256    String   @unique
  filePath  String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  imageLinks ImageLink[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ImageLink {
  id        Int      @id @default(autoincrement())
  shortCode String   @unique  // 短链接代码，如 "abc123"
  imageId   Int
  image     Image    @relation(fields: [imageId], references: [id], onDelete: Cascade)
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  accessCount Int    @default(0)  // 访问计数
  isActive  Boolean  @default(true)  // 是否激活
  expiresAt DateTime?  // 过期时间（可选）
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([shortCode])
  @@index([imageId])
}
